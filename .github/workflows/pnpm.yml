name: 'ðŸ“¦ pnpm-publish'
on:
  workflow_call:
    inputs:
      runs-on:
        description: 'Runner label for all jobs'
        required: true
        type: string
      repository:
        description: 'Repository to checkout and build (owner/repo)'
        required: true
        type: string
      ref:
        description: 'Git ref to checkout and build'
        required: true
        type: string
      dry_run:
        description: 'Run in dry-run mode (show analysis without publishing)'
        required: false
        type: boolean
        default: false
jobs:
  analyze:
    name: "ðŸ§± analyze pnpm packages"
    runs-on: ${{ inputs.runs-on }}
    permissions:
      contents: read
      packages: read
    outputs:
      matrix: ${{ steps.analyze.outputs.matrix }}
      has_packages: ${{ steps.analyze.outputs.has_packages }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.ref }}
      - name: Analyze packages (GHCR + semver)
        id: analyze
        uses: jmmaloney4/toolbox/.github/actions/analyze-pnpm-packages@main
        with:
          dry_run: ${{ inputs.dry_run }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Debug matrix output
        run: |
          echo "Matrix output:"
          echo '${{ steps.analyze.outputs.matrix }}'
          echo ""
          echo "Matrix length:"
          echo "${{ fromJson(steps.analyze.outputs.matrix || '[]').length }}"
          echo ""
          echo "Matrix as JSON:"
          echo '${{ toJson(fromJson(steps.analyze.outputs.matrix || '[]')) }}'
  publish-packages:
    name: "ðŸš€ publish to GHCR"
    needs: analyze
    runs-on: ${{ inputs.runs-on }}
    if: needs.analyze.outputs.has_packages == 'true'
    strategy:
      fail-fast: false # Each package publishes independently
      matrix:
        include: ${{ fromJson(needs.analyze.outputs.matrix || '[]') }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Debug matrix in publish job
        run: |
          echo "Matrix from analyze job:"
          echo "${{ needs.analyze.outputs.matrix }}"
          echo ""
          echo "Matrix length:"
          echo "${{ fromJson(needs.analyze.outputs.matrix || '[]').length }}"
          echo ""
          echo "Matrix as JSON:"
          echo '${{ toJson(fromJson(needs.analyze.outputs.matrix || '[]')) }}'
      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.ref }}
      - uses: jmmaloney4/toolbox/.github/actions/nix-setup@main
      - name: Install dependencies
        run: nix develop --command pnpm install --frozen-lockfile
      - name: Build packages
        run: nix develop --command pnpm build
      - name: Summary (per-package)
        run: |
          echo "## ðŸ“¦ Publish Plan for ${{ matrix.name }}" >> $GITHUB_STEP_SUMMARY
          if [ "${{ inputs.dry_run }}" = "true" ]; then
            echo "> **DRY RUN** - No publish will occur" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Path:** \`${{ matrix.package_path }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Local:** \`${{ matrix.local_version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Published:** \`${{ matrix.published_version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Change:** \`${{ matrix.release_type }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Action:** \`${{ matrix.action }}\`" >> $GITHUB_STEP_SUMMARY
      - name: Publish package
        if: inputs.dry_run != true && matrix.action == 'publish'
        run: nix develop --command pnpm publish --registry=https://npm.pkg.github.com --no-git-checks
        working-directory: ${{ matrix.package_path }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
