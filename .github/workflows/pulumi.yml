name: '☁️ pulumi'
on:
  workflow_call:
    inputs:
      runs-on:
        description: 'Runner label for all jobs'
        required: false
        default: 'runs-on=${{ github.run_id }}/runner=1cpu-linux-x64/extras=s3-cache'
        type: string
      repository:
        description: 'Repository to checkout and build (owner/repo)'
        required: true
        type: string
      ref:
        description: 'Git ref to checkout and build'
        required: true
        type: string
      google_workload_identity_provider:
        description: 'GCP Workload Identity Provider resource'
        required: true
        type: string
      google_service_account_email:
        description: 'GCP service account email'
        required: true
        type: string
      pulumi_backend_url:
        description: 'GCS bucket URL for Pulumi backend (e.g., gs://my-bucket-name)'
        required: true
        type: string
      pr_number:
        description: 'Pull request number to comment on (if any)'
        required: false
        type: number
      is_fork:
        description: 'Whether the PR head comes from a fork'
        required: false
        type: boolean
jobs:
  detect-pulumi-stacks:
    name: "🧩 detect pulumi stacks"
    runs-on: ${{ inputs.runs-on }}
    permissions:
      contents: read
      id-token: write
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    env:
      PULUMI_BACKEND_URL: ${{ inputs.pulumi_backend_url }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.ref }}
      - uses: jmmaloney4/toolbox/.github/actions/nix-setup@main
        with:
          runs-on: ${{ inputs.runs-on }}
      - name: Detect all (project, stack) pairs
        id: set-matrix
        uses: jmmaloney4/toolbox/.github/actions/detect-pulumi-stacks@main
  pulumi-preview-and-deploy:
    name: "🔍☁️ pulumi preview + deploy"
    needs: detect-pulumi-stacks
    runs-on: ${{ inputs.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.detect-pulumi-stacks.outputs.matrix) }}
    concurrency:
      group: ${{ github.event_name == 'workflow_call' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')) && format('pulumi-deploy-{0}-{1}', matrix.project, matrix.stack) || format('pulumi-preview-{0}-{1}-{2}', matrix.project, matrix.stack, github.ref_name) }}
      cancel-in-progress: false
    permissions:
      packages: read
      id-token: write
      contents: read
      actions: write
      deployments: write
    env:
      GOOGLE_WORKLOAD_IDENTITY_PROVIDER: ${{ inputs.google_workload_identity_provider }}
      GOOGLE_SERVICE_ACCOUNT_EMAIL: ${{ inputs.google_service_account_email }}
      PULUMI_BACKEND_URL: ${{ inputs.pulumi_backend_url }}
      PULUMI_CONFIG_PASSPHRASE: ""
      USE_GKE_GCLOUD_AUTH_PLUGIN: "True"
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.ref }}
      - uses: jmmaloney4/toolbox/.github/actions/pulumi-setup@main
        with:
          google_workload_identity_provider: ${{ inputs.google_workload_identity_provider }}
          google_service_account_email: ${{ inputs.google_service_account_email }}
          # Auth & registry for GitHub Packages (public or private still needs a token)
      - name: Configure .npmrc for GitHub Packages
        run: |
          echo "@jmmaloney4:registry=https://npm.pkg.github.com" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc
          echo "always-auth=true" >> ~/.npmrc
      - name: Install pnpm dependencies
        if: ${{ hashFiles('pnpm-lock.yaml') != '' }}
        run: nix develop .#ci-pulumi --command pnpm install --frozen-lockfile
        shell: bash
      - name: derive artifact-safe name
        id: names
        shell: bash
        run: |
          safe_name="${{ matrix.project }}"
          safe_name="${safe_name//\//__}"
          echo "safe_name=$safe_name" >> "$GITHUB_OUTPUT"
      - name: pulumi preview
        id: preview
        continue-on-error: true
        uses: jmmaloney4/toolbox/.github/actions/pulumi-preview@main
        with:
          project: ${{ matrix.project }}
          stack: ${{ matrix.stack }}
          safe-name: ${{ steps.names.outputs.safe_name }}
      - name: upload stage preview artifacts
        if: ${{ always() && matrix.stack == 'stage' }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: stage-previews-${{ steps.names.outputs.safe_name }}
          path: previews/*
          if-no-files-found: ignore
      - name: upload prod preview artifacts
        if: ${{ always() && matrix.stack == 'prod' }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: prod-previews-${{ steps.names.outputs.safe_name }}
          path: previews/*
          if-no-files-found: ignore
      - name: pulumi up (stage)
        if: ${{ steps.preview.outcome == 'success' && github.ref == 'refs/heads/main' && matrix.stack == 'stage' }}
        run: nix develop .#ci-pulumi --command pulumi up -C ${{ matrix.project }} --stack ${{ matrix.stack }} --yes --non-interactive
        shell: bash
      - name: pulumi up (prod)
        if: ${{ steps.preview.outcome == 'success' && startsWith(github.ref, 'refs/tags/v') && matrix.stack == 'prod' }}
        run: nix develop .#ci-pulumi --command pulumi up -C ${{ matrix.project }} --stack ${{ matrix.stack }} --yes --non-interactive
        shell: bash
      - name: fail job if preview failed
        if: ${{ steps.preview.outcome != 'success' }}
        run: |
          echo "Preview failed; skipping deploy and failing job."
          exit 1
        shell: bash
