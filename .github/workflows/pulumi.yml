name: '☁️ pulumi'

on:
  workflow_call:
    inputs:
      runs-on:
        description: 'Runner label for all jobs'
        required: true
        type: string
      repository:
        description: 'Repository to checkout and build (owner/repo)'
        required: true
        type: string
      ref:
        description: 'Git ref to checkout and build'
        required: true
        type: string
      google_project:
        description: 'GCP project ID'
        required: true
        type: string
      google_workload_identity_provider:
        description: 'GCP Workload Identity Provider resource'
        required: true
        type: string
      google_service_account_email:
        description: 'GCP service account email'
        required: true
        type: string
      pr_number:
        description: 'Pull request number to comment on (if any)'
        required: false
        type: number
      is_fork:
        description: 'Whether the PR head comes from a fork'
        required: false
        type: boolean

jobs:
  detect-pulumi-stacks:
    name: "🧩 detect pulumi stacks"
    runs-on: ${{ inputs.runs-on }}
    permissions:
      contents: read
      id-token: write
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.ref }}
    - uses: DeterminateSystems/nix-installer-action@main
    - uses: DeterminateSystems/flakehub-cache-action@main
    - name: Detect all (project, stack) pairs
      id: set-matrix
      run: |
        matrix=$(nix develop .#pulumi --command just detect-stacks | tail -n 1)
        echo "matrix=$matrix" >> "$GITHUB_OUTPUT"
      shell: bash

  pulumi-preview:
    name: "🔍 pulumi preview"
    needs: detect-pulumi-stacks
    runs-on: ${{ inputs.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.detect-pulumi-stacks.outputs.matrix) }}
    permissions:
      id-token: write
      contents: read
      actions: write
    env:
      GOOGLE_PROJECT: ${{ inputs.google_project }}
      GOOGLE_WORKLOAD_IDENTITY_PROVIDER: ${{ inputs.google_workload_identity_provider }}
      GOOGLE_SERVICE_ACCOUNT_EMAIL: ${{ inputs.google_service_account_email }}
      PULUMI_CONFIG_PASSPHRASE: ""
      USE_GKE_GCLOUD_AUTH_PLUGIN: "True"
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.ref }}
    - uses: jmmaloney4/workflows/.github/actions/pulumi-setup@main
      with:
        google_project: ${{ inputs.google_project }}
        google_workload_identity_provider: ${{ inputs.google_workload_identity_provider }}
        google_service_account_email: ${{ inputs.google_service_account_email }}

    - name: derive artifact-safe name
      id: names
      shell: bash
      run: |
        safe_name="${{ matrix.project }}"
        safe_name="${safe_name//\//__}"
        echo "safe_name=$safe_name" >> "$GITHUB_OUTPUT"

    - name: pulumi preview
      id: preview
      continue-on-error: true
      uses: jmmaloney4/workflows/.github/actions/pulumi-preview@main
      with:
        project: ${{ matrix.project }}
        stack: ${{ matrix.stack }}
        safe-name: ${{ steps.names.outputs.safe_name }}

    - name: upload stage preview artifacts
      if: ${{ matrix.stack == 'stage' }}
      uses: actions/upload-artifact@v4
      with:
        name: stage-previews-${{ steps.names.outputs.safe_name }}
        path: previews/*
        if-no-files-found: error

    - name: upload prod preview artifacts
      if: ${{ matrix.stack == 'prod' }}
      uses: actions/upload-artifact@v4
      with:
        name: prod-previews-${{ steps.names.outputs.safe_name }}
        path: previews/*
        if-no-files-found: error

    - name: mark successful stage preview
      if: ${{ matrix.stack == 'stage' && steps.preview.outcome == 'success' }}
      run: |
        mkdir -p ok
        safe_name="${{ matrix.project }}"
        safe_name="${safe_name//\//__}"
        jq -n --arg project "${{ matrix.project }}" --arg stack "${{ matrix.stack }}" \
          '{project:$project, stack:$stack}' > "ok/${safe_name}.json"

    - name: mark successful prod preview
      if: ${{ matrix.stack == 'prod' && steps.preview.outcome == 'success' }}
      run: |
        mkdir -p ok
        safe_name="${{ matrix.project }}"
        safe_name="${safe_name//\//__}"
        jq -n --arg project "${{ matrix.project }}" --arg stack "${{ matrix.stack }}" \
          '{project:$project, stack:$stack}' > "ok/${safe_name}.json"

    - name: upload stage preview markers
      if: ${{ success() && matrix.stack == 'stage' }}
      uses: actions/upload-artifact@v4
      with:
        name: stage-ok-${{ matrix.stack }}-${{ hashFiles('ok/*.json') }}
        path: ok/*.json
        if-no-files-found: ignore

    - name: upload prod preview markers
      if: ${{ success() && matrix.stack == 'prod' }}
      uses: actions/upload-artifact@v4
      with:
        name: prod-ok-${{ matrix.stack }}-${{ hashFiles('ok/*.json') }}
        path: ok/*.json
        if-no-files-found: ignore

  collect-stage-targets:
    name: "📦 collect successful stage previews"
    needs: pulumi-preview
    runs-on: ${{ inputs.runs-on }}
    outputs:
      matrix: ${{ steps.collect.outputs.matrix }}
    permissions:
      actions: read
      contents: read
      issues: write
      pull-requests: write
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.ref }}
    - id: collect
      uses: jmmaloney4/workflows/.github/actions/pulumi-collect@main
      with:
        kind: stage

    - name: find existing summary comment
      if: ${{ inputs.pr_number > 0 && !inputs.is_fork }}
      id: find-summary
      uses: peter-evans/find-comment@v3
      with:
        issue-number: ${{ inputs.pr_number }}
        body-includes: '<!-- pulumi-stage-summary -->'

    - name: create or update summary comment
      if: ${{ inputs.pr_number > 0 && !inputs.is_fork }}
      uses: peter-evans/create-or-update-comment@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        issue-number: ${{ inputs.pr_number }}
        body-file: stage-preview-summary.md
        comment-id: ${{ steps.find-summary.outputs.comment-id }}
        edit-mode: replace

    - name: skip PR comment for forked contributions
      if: ${{ inputs.pr_number > 0 && inputs.is_fork }}
      run: |
        echo "Skipping PR comment on forked contribution due to token permission restrictions."

  pulumi-up-stage:
    name: "🚀 pulumi up (stage)"
    needs: collect-stage-targets
    if: ${{ github.ref == 'refs/heads/main' && join(fromJson(needs.collect-stage-targets.outputs.matrix)) != '' }}
    # IMPORTANT: No `environment:` here — we will create Deployments manually to avoid duplicates.
    runs-on: ${{ inputs.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.collect-stage-targets.outputs.matrix) }}
    concurrency:
      group: pulumi-${{ matrix.project }}-${{ matrix.stack }}
      cancel-in-progress: false
    permissions:
      id-token: write
      contents: read
      deployments: write
    env:
      GOOGLE_PROJECT: ${{ inputs.google_project }}
      GOOGLE_WORKLOAD_IDENTITY_PROVIDER: ${{ inputs.google_workload_identity_provider }}
      GOOGLE_SERVICE_ACCOUNT_EMAIL: ${{ inputs.google_service_account_email }}
      PULUMI_CONFIG_PASSPHRASE: ""
      USE_GKE_GCLOUD_AUTH_PLUGIN: "True"
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.ref }}
    - uses: jmmaloney4/workflows/.github/actions/pulumi-setup@main
      with:
        google_project: ${{ inputs.google_project }}
        google_workload_identity_provider: ${{ inputs.google_workload_identity_provider }}
        google_service_account_email: ${{ inputs.google_service_account_email }}

    - name: pulumi up
      run: nix develop .#pulumi --command pulumi up -C ${{ matrix.project }} --stack ${{ matrix.stack }} --yes --non-interactive

  collect-prod-targets:
    name: "📦 collect successful prod previews"
    needs: pulumi-preview
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    runs-on: ${{ inputs.runs-on }}
    outputs:
      matrix: ${{ steps.collect.outputs.matrix }}
    permissions:
      actions: read
      contents: read
      issues: write
      pull-requests: write
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - id: collect
      uses: ./.github/actions/pulumi-collect
      with:
        kind: prod

  pulumi-up-prod:
    name: "🚀 pulumi up (prod)"
    needs: collect-prod-targets
    if: ${{ startsWith(github.ref, 'refs/tags/v') && join(fromJson(needs.collect-prod-targets.outputs.matrix)) != '' }}
    # IMPORTANT: No `environment:` here — we will create Deployments manually to avoid duplicates.
    runs-on: ${{ inputs.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.collect-prod-targets.outputs.matrix) }}
    concurrency:
      group: pulumi-${{ matrix.project }}-${{ matrix.stack }}
      cancel-in-progress: false
    permissions:
      id-token: write
      contents: read
      deployments: write
    env:
      GOOGLE_PROJECT: ${{ vars.GCP_PROJECT_ID }}
      GOOGLE_WORKLOAD_IDENTITY_PROVIDER: ${{ vars.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      GOOGLE_SERVICE_ACCOUNT_EMAIL: ${{ vars.GCP_SERVICE_ACCOUNT_EMAIL }}
      PULUMI_CONFIG_PASSPHRASE: ""
      USE_GKE_GCLOUD_AUTH_PLUGIN: "True"
    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - uses: ./.github/actions/pulumi-setup

    - name: pulumi up
      run: nix develop .#pulumi --command pulumi up -C ${{ matrix.project }} --stack ${{ matrix.stack }} --yes --non-interactive