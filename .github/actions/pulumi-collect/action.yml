# Pulumi Collect Action
#
# Collects Pulumi preview artifacts and builds deployment matrices for stage/prod.
# This action downloads preview markers and artifacts, then builds a matrix of
# successful previews for deployment.
#
# Usage:
# ```yaml
# - uses: jmmaloney4/workflows/.github/actions/pulumi-collect@main
#   id: collect
#   with:
#     kind: stage
# - name: Use collected matrix
#   run: echo '${{ steps.collect.outputs.matrix }}'
# ```

name: 'Collect Pulumi previews and build deploy matrix'
description: 'Download success markers and previews, summarize results, and output deployment matrix'

inputs:
  kind:
    description: 'Environment kind (stage or prod)'
    required: true
  working-directory:
    description: 'Working directory for operations'
    required: false
    default: '.'

outputs:
  matrix:
    description: 'JSON matrix of {project, stack} objects ready for deployment'
    value: ${{ steps.build.outputs.matrix }}
  summary-path:
    description: 'Path to the generated summary file'
    value: ${{ steps.build.outputs.summary-path }}

runs:
  using: 'composite'
  steps:
  - name: Download success markers
    uses: actions/download-artifact@v4
    with:
      pattern: ${{ inputs.kind }}-ok-*
      path: ${{ inputs.kind }}-ok
      merge-multiple: true

  - name: Download preview artifacts
    uses: actions/download-artifact@v4
    with:
      pattern: ${{ inputs.kind }}-previews-*
      path: ${{ inputs.kind }}-previews
      merge-multiple: true

  - name: Build deployment matrix
    id: build
    shell: bash
    working-directory: ${{ inputs.working-directory }}
    run: |
      set -euo pipefail
      
      echo "=== Building deployment matrix for ${{ inputs.kind }} ==="
      
      # Collect all successful preview markers
      matrix_items=()
      summary_file="${{ inputs.kind }}-preview-summary.md"
      
      # Initialize summary
      {
        echo "<!-- pulumi-${{ inputs.kind }}-summary -->"
        echo "## 🔍 Pulumi ${{ inputs.kind }} Preview Summary"
        echo ""
        echo "| Project | Stack | Status | Preview |"
        echo "|---------|-------|--------|---------|"
      } > "$summary_file"
      
      # Process success markers
      if [ -d "${{ inputs.kind }}-ok" ] && [ "$(ls -A "${{ inputs.kind }}-ok" 2>/dev/null)" ]; then
        for marker_file in "${{ inputs.kind }}-ok"/*.json; do
          if [ -f "$marker_file" ]; then
            # Extract project and stack from marker
            project=$(jq -r '.project' "$marker_file")
            stack=$(jq -r '.stack' "$marker_file")
            
            echo "Found successful preview: $project/$stack"
            
            # Add to matrix
            matrix_items+=("{\"project\": \"$project\", \"stack\": \"$stack\"}")
            
            # Add to summary
            safe_name="${project//\//__}"
            preview_path=""
            if [ -d "${{ inputs.kind }}-previews" ]; then
              # Look for corresponding preview files
              preview_files=$(find "${{ inputs.kind }}-previews" -name "*${safe_name}*" -type f | head -5)
              if [ -n "$preview_files" ]; then
                preview_path="📄 [View Preview](#)"
              fi
            fi
            
            echo "| \`$project\` | \`$stack\` | ✅ Ready | $preview_path |" >> "$summary_file"
          fi
        done
      else
        echo "No success markers found in ${{ inputs.kind }}-ok"
      fi
      
      # Build final matrix JSON
      if [ ${#matrix_items[@]} -eq 0 ]; then
        matrix="[]"
        echo "" >> "$summary_file"
        echo "⚠️ No successful previews found. Nothing to deploy." >> "$summary_file"
      else
        matrix="[$(IFS=,; echo "${matrix_items[*]}")]"
        echo "" >> "$summary_file"
        echo "🚀 **Ready to deploy:** ${#matrix_items[@]} stack(s)" >> "$summary_file"
      fi
      
      echo "" >> "$summary_file"
      echo "_Generated by Pulumi Collect Action at $(date -u '+%Y-%m-%d %H:%M:%S UTC')_" >> "$summary_file"
      
      echo "Final matrix: $matrix"
      echo "matrix=$matrix" >> "$GITHUB_OUTPUT"
      echo "summary-path=$summary_file" >> "$GITHUB_OUTPUT"
      
      # Output to step summary
      cat "$summary_file" >> "$GITHUB_STEP_SUMMARY"

  - name: Upload summary artifact
    uses: actions/upload-artifact@v4
    with:
      name: pulumi-${{ inputs.kind }}-summary
      path: ${{ steps.build.outputs.summary-path }}
      if-no-files-found: warn