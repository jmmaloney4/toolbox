# Pulumi Stack Detect Action
#
# Automatically detects Pulumi stacks in a repository and generates a build matrix.
# Supports both Nix-based projects (with `just detect-stacks`) and standard detection.
#
# Usage:
# ```yaml
# - uses: jmmaloney4/workflows/.github/actions/pulumi-stack-detect@main
#   id: detect
#   with:
#     use-nix: true
#     working-directory: "."
# - name: Use matrix
#   run: echo '${{ steps.detect.outputs.matrix }}'
# ```

name: 'Pulumi Stack Detect'
description: 'Detect Pulumi stacks and generate deployment matrix'

inputs:
  use-nix:
    description: 'Use Nix development environment for detection'
    required: false
    default: 'true'
  working-directory:
    description: 'Working directory to search for Pulumi stacks'
    required: false
    default: '.'
  detection-command:
    description: 'Custom command to detect stacks (overrides default detection)'
    required: false
    default: ''
  include-stacks:
    description: 'Comma-separated list of stack names to include (empty = all)'
    required: false
    default: ''
  exclude-stacks:
    description: 'Comma-separated list of stack names to exclude'
    required: false
    default: ''

outputs:
  matrix:
    description: 'JSON matrix of {project, stack} objects'
    value: ${{ steps.detect.outputs.matrix }}
  count:
    description: 'Number of stacks found'
    value: ${{ steps.detect.outputs.count }}
  has-stacks:
    description: 'Whether any stacks were found'
    value: ${{ steps.detect.outputs.has_stacks }}

runs:
  using: 'composite'
  steps:
  - name: Setup environment for Nix
    if: ${{ inputs.use-nix == 'true' }}
    uses: jmmaloney4/workflows/.github/actions/nix-setup@main

  - name: Setup Node.js for non-Nix
    if: ${{ inputs.use-nix != 'true' }}
    uses: actions/setup-node@v4
    with:
      node-version: '18'

  - name: Install dependencies for non-Nix
    if: ${{ inputs.use-nix != 'true' }}
    shell: bash
    working-directory: ${{ inputs.working-directory }}
    run: |
      if [ -f "package.json" ]; then
        echo "Installing npm dependencies..."
        npm install
      else
        echo "No package.json found, skipping npm install"
      fi

  - name: Detect Pulumi stacks
    id: detect
    shell: bash
    working-directory: ${{ inputs.working-directory }}
    run: |
      set -euo pipefail
      
      # Run the Python detection script
      python3 "${{ github.action_path }}/detect_stacks.py" \
        --working-directory "." \
        ${{ inputs.use-nix == 'true' && '--use-nix' || '' }} \
        ${{ inputs.detection-command != '' && format('--detection-command "{0}"', inputs.detection-command) || '' }} \
        ${{ inputs.include-stacks != '' && format('--include-stacks "{0}"', inputs.include-stacks) || '' }} \
        ${{ inputs.exclude-stacks != '' && format('--exclude-stacks "{0}"', inputs.exclude-stacks) || '' }}
      
      # Read the outputs that were set by the Python script
      matrix=$(grep "^matrix=" "$GITHUB_OUTPUT" | cut -d= -f2- | tail -1)
      count=$(grep "^count=" "$GITHUB_OUTPUT" | cut -d= -f2- | tail -1)
      has_stacks=$(grep "^has_stacks=" "$GITHUB_OUTPUT" | cut -d= -f2- | tail -1)
      
      # Write summary
      {
        echo "### üß© Pulumi Stack Detection Results"
        echo ""
        if [ "$has_stacks" == "true" ]; then
          echo "**Found $count Pulumi stack(s):**"
          echo ""
          echo "| Project | Stack | Environment |"
          echo "|---------|-------|-------------|"
          
          # Use jq to format the table
          echo "$matrix" | jq -r '.[] | "| `" + .project + "` | `" + .stack + "` | " + .stack + " |"'
          
          echo ""
          echo "üöÄ **Ready for deployment pipeline**"
          
          if [ -n "${{ inputs.include-stacks }}" ]; then
            echo ""
            echo "**Note:** Filtered by include list: \`${{ inputs.include-stacks }}\`"
          fi
          
          if [ -n "${{ inputs.exclude-stacks }}" ]; then
            echo ""
            echo "**Note:** Filtered by exclude list: \`${{ inputs.exclude-stacks }}\`"
          fi
          
        else
          echo "‚ùå **No Pulumi stacks found**"
          echo ""
          echo "**Search method:** ${{ inputs.use-nix == 'true' && 'Nix + just detect-stacks' || 'Direct file search' }}"
          echo "**Working directory:** \`$(pwd)\`"
          echo ""
          echo "Make sure you have:"
          echo "- Pulumi project files (\`Pulumi.yaml\`)"
          echo "- Stack configuration files (\`Pulumi.<stack>.yaml\`)"
          if [ "${{ inputs.use-nix }}" == "true" ]; then
            echo "- A working \`just detect-stacks\` command (optional)"
          fi
        fi
        echo ""
        echo "_Detection completed at $(date -u '+%Y-%m-%d %H:%M:%S UTC')_"
      } >> "$GITHUB_STEP_SUMMARY"